import Head from 'next/head';
import {useQuery} from '@tanstack/react-query';
import Footer from '../components/footer';
import {useState} from 'react';
import fetchPhoneticTranslation from '../requests/fetch-phonetic-translation';

export default function Home() {
    let timer;
    const [text, setText] = useState('');

    const {data, isError, error, isFetching, isSuccess} = useQuery({
        queryKey: ['translation', text],
        queryFn: () => fetchPhoneticTranslation('en_UK', text),
        initialData: {translation: ''}
    });

    const handleChange = (event) => {
        clearTimeout(timer);
        timer = setTimeout(() => {
            const newText = event.target.value;
            console.log(newText);
            setText(newText);
        }, 400);
    };

    return (
        <div className="flex flex-col h-full">
            <Head>
                <title>Phonetic Translator</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <main className="px-20 py-10 max-w-[80ch]">
                <label
                    htmlFor="input"
                    className="block mb-2 text-sm font-medium text-gray-900"
                >Input</label>
                <textarea
                    id="input"
                    onChange={handleChange}
                    className="min-h-[260px] block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="Enter text to translate"
                />
                <div className="my-10">
                    {isSuccess && (
                        <>
                            <label
                                className="block mb-2 text-sm font-medium text-gray-900"
                            >Output</label>
                            <textarea
                                value={data.translation}
                                readOnly
                                className="min-h-[260px] block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 outline-none focus:outline-none"
                            />
                        </>
                    )}
                    {isError && <p>{error}</p>}
                </div>
            </main>
            <Footer/>
        </div>
    );
}
